import { Response } from 'supertest';

const expectError = (res: Response, status: number, name: string) => {
  expect(res.type).toMatch(/json/);
  expect(res.status).toBe(status);

  expect(Object.keys(res.body)).toEqual(expect.arrayContaining(['status', 'name', 'message']));
  expect(res.body).toMatchObject({ status, name });
};

export const expectOk = (res: Response): void => {
  expect(res.type).toMatch(/json/);
  expect(res.status).toBe(200);
};

export const expectCreated = (res: Response): void => {
  expect(res.type).toMatch(/json/);
  expect(res.status).toBe(201);
};

export const expectNoContent = (res: Response): void => {
  expect(res.body).toMatchObject({});
  expect(res.status).toBe(204);
};

export const expectBadRequestError = (res: Response): void => {
  expectError(res, 400, 'BadRequestError');
};

export const expectUnauthorizedError = (res: Response): void => {
  expectError(res, 401, 'UnauthorizedError');
};

export const expectForbiddenError = (res: Response): void => {
  expectError(res, 403, 'ForbiddenError');
};

export const expectNotFoundError = (res: Response): void => {
  expectError(res, 404, 'NotFoundError');
};

export const expectInternalServerError = (res: Response): void => {
  expectError(res, 500, 'InternalServerError');
};
