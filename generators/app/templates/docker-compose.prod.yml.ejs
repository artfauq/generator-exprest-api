version: '3'

services:
  node:
    build:
      target: final<% if (sequelize || redis) { %>
    entrypoint: dockerize<% if (sequelize) { %> -wait tcp://db:${DB_PORT}<% } %><% if (redis) { %> -wait tcp://redis:${REDIS_PORT}<% } %> -timeout 30s yarn start<% } %>
    restart: unless-stopped<% if (sequelize) { %>

  db:
    restart: unless-stopped<% if (dialect.value === 'mysql') { %>

  db-backup:
    image: fradelg/mysql-cron-backup
    container_name: <%= shortname %>-db-backup
    depends_on:
      - db
    volumes:
      - ./backup:/backup
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: $DB_PORT
      MYSQL_USER: $DB_USER
      MYSQL_PASS: $DB_PASSWORD
      MYSQL_DB: $DB_NAME
      MAX_BACKUPS: 10
      INIT_BACKUP: 0
      CRON_TIME: 0 3 * * *
    restart: unless-stopped<% } %><% } %>
