import Router from 'express-promise-router';<% if (morgan) { %>
import morgan from 'morgan';
import { Container } from 'typedi';<% if (winston) { %>
import { Logger } from 'winston';<% var loggerType = 'Logger'; %><% } else { %><% var loggerType = 'Console'; %><% } %><% } %><% if (auth) { %>
import authController from './auth.controller';<% } %>
import healthController from './health.controller';<% if (sequelize) { %>
import usersController from './users.controller';<% } %>

const router = Router();<% if (morgan) { %>

/**
 * HTTP request logging configuration
 */
router.use(
  morgan('dev', {
    stream: {
      write: message => {
        const logger = Container.get<<%= loggerType %>>('logger');

        logger.info(message.trim());
      },
    },
  }),
);<% } %>

/**
 * API routes
 */<% if (auth) { %>
router.use('/auth', authController);<% } %>
router.use('/health', healthController);<% if (sequelize) { %>
router.use('/users', usersController);<% } %>

export default router;
