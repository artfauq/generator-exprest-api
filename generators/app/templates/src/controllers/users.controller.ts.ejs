import { Body, Get, HttpCode, JsonController, Param, Post } from 'routing-controllers';
import { Container, Service } from 'typedi';<% if (auth) { %>
import { Protected } from '../decorators';<% } %>
import { CreateUserDTO, UserDTO } from '../dto';
import { UserService } from '../services';

@JsonController('/users')
@Service()
export class UsersController {
  private userService: UserService;

  constructor() {
    this.userService = Container.get(UserService);
  }

  @Get('/:userId')
  @HttpCode(200)<% if (auth) { %>
  @Protected()<% } %>
  async getUser(@Param('userId') userId: string): Promise<UserDTO> {
    const user = await this.userService.getUser(userId);

    return new UserDTO(user);
  }

  @Post('/')
  @HttpCode(201)
  async createUser(@Body({ required: true }) body: CreateUserDTO): Promise<UserDTO> {
    const user = await this.userService.createUser(body);

    return new UserDTO(user);
  }
}
