import { Body, HttpCode, JsonController, Post } from 'routing-controllers';
import { Container, Service } from 'typedi';
import { CreateUserDTO, UserDTO } from '../dto';
import { EventService, UserService } from '../services';
import { AppEvent } from '../types/enums';

@JsonController('/users')
@Service()
export class UsersController {
  private eventService: EventService;

  private userService: UserService;

  constructor() {
    this.eventService = Container.get(EventService);
    this.userService = Container.get(UserService);
  }

  @Post('/')
  @HttpCode(201)
  async createUser(@Body({ required: true }) body: CreateUserDTO): Promise<UserDTO> {
    const user = await this.userService.createUser(body);

    this.eventService.emit(AppEvent.UserCreated, user.get({ plain: true }));

    return new UserDTO(user);
  }
}
