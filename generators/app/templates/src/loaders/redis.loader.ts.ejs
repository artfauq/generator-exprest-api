import redis, { RedisClient } from 'redis';<% if (winston) { %>
import { Logger } from 'winston';<% var loggerType = 'Logger'; %><% } else { %><% var loggerType = 'Console'; %><% } %>
import config from '../config';

/**
 * Redis client initializer
 */
export default ({ logger }: { logger: <%= loggerType %> }): Promise<RedisClient> => {
  // Create Redis client
  const redisClient = redis.createClient(config.redis.port, config.redis.host);

  return new Promise((resolve, reject) => {
    redisClient
      .on('connect', () => {
        logger.info('Successfully connected to Redis server');

        resolve(redisClient);
      })
      .on('error', err => reject(new Error(`failed to initialize redis client. ${err}`)));
  });
};
