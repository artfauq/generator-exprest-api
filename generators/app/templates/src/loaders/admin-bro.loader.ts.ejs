import AdminBroSequelize from '@admin-bro/sequelize';
import AdminBro from 'admin-bro';
import { Sequelize } from 'sequelize-typescript';<% if (winston) { %>
import { Logger } from 'winston';<% var loggerType = 'Logger'; %><% } else { %><% var loggerType = 'Console'; %><% } %>
import * as admin from '../admin';
import config from '../config';
import { Models } from './sequelize.loader';

// Register Sequelize adapter
AdminBro.registerAdapter(AdminBroSequelize);

/**
 * AdminBro instance initializer
 */
export default ({ logger, sequelize }: { logger: <%= loggerType %>; sequelize: Sequelize }): AdminBro => {
  const adminBro = new AdminBro({
    branding: {
      companyName: config.admin.title,
    },
    locale: {
      language: 'en',
      translations: admin.translations.en,
    },
    resources: Object.values(admin.resources).map(resource =>
      resource({
        models: sequelize.models as Models,
      }),
    ),
    rootPath: config.admin.path,
  });

  logger.info(`Successfully initialized AdminJs instance`);

  return adminBro;
};
