version: '3'

services:
  node:
    build:
      context: ./
      dockerfile: docker/node/Dockerfile
    image: <%= shortname %>
    container_name: <%= shortname %><% if (sequelize || redis) { %>
    depends_on:<% if (sequelize) { %>
      - db<% } %><% if (redis) { %>
      - redis<% } %>
    env_file: .env
    environment:<% if (sequelize) { %>
      DB_HOST: db<% } %><% if (redis) { %>
      REDIS_HOST: redis<% } %><% } %>
    expose:
      - ${PORT}
    tty: true
    volumes:
      - /home/node/node_modules<% if (sequelize) { %>

  db:
    image: <%= dialect.docker.image %>
    container_name: <%= shortname %>-db
    environment:
      <%= dialect.docker.user %>: $DB_USER
      <%= dialect.docker.password %>: $DB_PASSWORD<% if (dialect.value === 'mysql') { %>
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD<% } %>
      <%= dialect.docker.database %>: $DB_NAME
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - db_data:<%= dialect.docker.volume %>

  migrate:
    image: <%= shortname %>
    container_name: <%= shortname %>-migrate
    entrypoint: dockerize -wait tcp://db:{DB_PORT} -timeout 30s yarn migrations:migrate
    environment:
      DB_HOST: db
    depends_on:
      - db
      - node<% } %><% if (redis) { %>

  redis:
    image: redis:alpine
    container_name: <%= shortname %>-redis
    command: --port ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}<% } %><% if (sequelize) { %>

volumes:
  db_data:<% } %>
